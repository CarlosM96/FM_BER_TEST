////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 3.6
//  \   \         Application : 7 Series FPGAs Transceivers Wizard 
//  /   /         Filename : gtwizard_0_exdes.v
// /___/   /\     
// \   \  /  \ 
//  \___\/\___\ 
//
//
// Module gtwizard_0_exdes
// Generated by: Xilinx 7 Series FPGAs Transceivers Wizard 
// Modificated by: Carlos B. Montiel and Diego Aranda 
// Mechanic and Energy Laboratory, Engineering College, Paraguay
// DAPHNE-PY TEAM for DUNE Experiment
// FULL MODE ERROR RATE TEST CODE
// 
// . 


`timescale 1ns / 1ps
`define DLY #1

(* DowngradeIPIdentifiedWarnings="yes" *)
//***********************************Entity Declaration************************
(* CORE_GENERATION_INFO = "gtwizard_0,gtwizard_v3_6_11,{protocol_file=Start_from_scratch}" *)
module gtwizard_0_exdes #
(
    parameter EXAMPLE_CONFIG_INDEPENDENT_LANES     =   1,//configuration for frame gen and check
    parameter EXAMPLE_LANE_WITH_START_CHAR         =   0,         // specifies lane with unique start frame char
    parameter EXAMPLE_WORDS_IN_BRAM                =   512,       // specifies amount of data in BRAM
    parameter EXAMPLE_SIM_GTRESET_SPEEDUP          =   "FALSE",    // simulation setting for GT SecureIP model
    parameter EXAMPLE_USE_CHIPSCOPE                =   0,         // Set to 1 to use Chipscope to drive resets
    parameter STABLE_CLOCK_PERIOD                  = 16

)
(
    input wire  Q0_CLK1_GTREFCLK_PAD_N_IN,
    input wire  Q0_CLK1_GTREFCLK_PAD_P_IN,
    input wire  USER_CLK_P,
    input wire  USER_CLK_N,
    input  wire         RXN_IN,
    input  wire         RXP_IN,
    output wire         TXN_OUT,
    output wire         TXP_OUT,
    input wire          SW6,
	
	output wire         led0,
	output wire          led1,
	output wire         led2,
	output wire         led3,
	input wire         RESET,
	output wire        TXSERIAL,
	output  wire        pcie_mgt_clk_sel0,
	output  wire        pcie_mgt_clk_sel1,
	inout wire         SDA,
	inout wire         SCL,
	output wire        clk_si5324_240_out_p,
	output wire        clk_si5324_240_out_n,
	output wire        si5324_resetn,
	output wire        i2cmux_rst
);


    wire soft_reset_rx_i;
    wire soft_reset_tx_i;
    wire soft_reset_vio_i;

//************************** Register Declarations ****************************
    wire            gt_txfsmresetdone_i;
    wire            gt_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt_txfsmresetdone_r2;
wire            gt0_txfsmresetdone_i;
wire            gt0_rxfsmresetdone_i;
(* ASYNC_REG = "TRUE" *)reg             gt0_txfsmresetdone_r;
(* ASYNC_REG = "TRUE" *)reg             gt0_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxfsmresetdone_r2;
(* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_r;
(* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_r2;
(* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_r3;


//**************************** Wire Declarations ******************************//
    //------------------------ GT Wrapper Wires ------------------------------
    //________________________________________________________________________
    //________________________________________________________________________
    //GT0  (X0Y3)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt0_drpaddr_i;
    wire    [15:0]  gt0_drpdi_i;
    wire    [15:0]  gt0_drpdo_i;
    wire            gt0_drpen_i;
    wire            gt0_drprdy_i;
    wire            gt0_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt0_eyescanreset_i;
    wire            gt0_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt0_eyescandataerror_i;
    wire            gt0_eyescantrigger_i;
    //---------------- Receive Ports - FPGA RX Interface Ports -----------------
    wire    [31:0]  gt0_rxdata_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt0_rxcharisk_i;
    wire    [3:0]   gt0_rxdisperr_i;
    wire    [3:0]   gt0_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt0_gtprxn_i;
    wire            gt0_gtprxp_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt0_rxbyteisaligned_i;
    wire            gt0_rxcommadet_i;
    wire            gt0_rxmcommaalignen_i;
    wire            gt0_rxpcommaalignen_i;
    //---------- Receive Ports - RX Decision Feedback Equalizer(DFE) -----------
    wire    [14:0]  gt0_dmonitorout_i;
    //------------------ Receive Ports - RX Equailizer Ports -------------------
    wire            gt0_rxlpmhfhold_i;
    wire            gt0_rxlpmlfhold_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt0_rxoutclk_i;
    wire            gt0_rxoutclkfabric_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt0_gtrxreset_i;
    wire            gt0_rxlpmreset_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt0_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt0_gttxreset_i;
    wire            gt0_txuserrdy_i;
    //---------------- Transmit Ports - FPGA TX Interface Ports ----------------
    wire    [31:0]  gt0_txdata_i;
    //---------------- Transmit Ports - TX 8B/10B Encoder Ports ----------------
    wire    [3:0]   gt0_txcharisk_i;
    //------------- Transmit Ports - TX Configurable Driver Ports --------------
    wire            gt0_gtptxn_i;
    wire            gt0_gtptxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt0_txoutclk_i;
    wire            gt0_txoutclkfabric_i;
    wire            gt0_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt0_txresetdone_i;

    //____________________________COMMON PORTS________________________________
    //------------------------ Common Block - PLL Ports ------------------------
    wire            gt0_pll0lock_i;
    wire            gt0_pll0refclklost_i;
    wire            gt0_pll0reset_i;
    wire            gt0_pll1lock_i;
    wire            gt0_pll1refclklost_i;
    wire            gt0_pll1reset_i;


    //----------------------------- Global Signals -----------------------------

wire            drpclk_in_i;
wire            DRPCLK_IN;
wire            gt0_tx_system_reset_c;
wire            gt0_rx_system_reset_c;
wire            tied_to_ground_i;
wire    [63:0]  tied_to_ground_vec_i;
wire            tied_to_vcc_i;
wire    [7:0]   tied_to_vcc_vec_i;
wire            GTTXRESET_IN;
wire            GTRXRESET_IN;
wire            PLL0RESET_IN;
wire            PLL1RESET_IN;

     //--------------------------- User Clocks ---------------------------------
 wire            gt0_txusrclk_i; 
 wire            gt0_txusrclk2_i; 
 wire            gt0_rxusrclk_i; 
 wire            gt0_rxusrclk2_i; 
wire            gt0_txmmcm_lock_i;
wire            gt0_txmmcm_reset_i;
wire            gt0_rxmmcm_lock_i; 
wire            gt0_rxmmcm_reset_i;
 
 
    //--------------------------- Reference Clocks ----------------------------
wire            q0_clk1_refclk_i;


    //--------------------- Frame check/gen Module Signals --------------------
wire            gt0_matchn_i;
    wire    [3:0]   gt0_txcharisk_float_i;
wire    [15:0]  gt0_txdata_float16_i;
    wire    [31:0]  gt0_txdata_float_i;
wire            gt0_block_sync_i;
wire            gt0_track_data_i;
wire    [7:0]   gt0_error_count_i;
wire            gt0_frame_check_reset_i;
wire            gt0_inc_in_i;
wire            gt0_inc_out_i;
wire    [31:0]  gt0_unscrambled_data_i;

wire            reset_on_data_error_i;
wire            track_data_out_i;

    //--------------------- Chipscope Signals ---------------------------------

    wire    [35:0]  tx_data_vio_control_i;
    wire    [35:0]  rx_data_vio_control_i;
    wire    [35:0]  shared_vio_control_i;
    wire    [35:0]  ila_control_i;
    wire    [35:0]  channel_drp_vio_control_i;
    wire    [35:0]  common_drp_vio_control_i;
    wire    [31:0]  tx_data_vio_async_in_i;
    wire    [31:0]  tx_data_vio_sync_in_i;
    wire    [31:0]  tx_data_vio_async_out_i;
    wire    [31:0]  tx_data_vio_sync_out_i;
    wire    [31:0]  rx_data_vio_async_in_i;
    wire    [31:0]  rx_data_vio_sync_in_i;
    wire    [31:0]  rx_data_vio_async_out_i;
    wire    [31:0]  rx_data_vio_sync_out_i;
    wire    [31:0]  shared_vio_in_i;
    wire    [31:0]  shared_vio_out_i;
    wire    [163:0] ila_in_i;
    wire    [31:0]  channel_drp_vio_async_in_i;
    wire    [31:0]  channel_drp_vio_sync_in_i;
    wire    [31:0]  channel_drp_vio_async_out_i;
    wire    [31:0]  channel_drp_vio_sync_out_i;
    wire    [31:0]  common_drp_vio_async_in_i;
    wire    [31:0]  common_drp_vio_sync_in_i;
    wire    [31:0]  common_drp_vio_async_out_i;
    wire    [31:0]  common_drp_vio_sync_out_i;

    wire    [31:0]  gt0_tx_data_vio_async_in_i;
    wire    [31:0]  gt0_tx_data_vio_sync_in_i;
    wire    [31:0]  gt0_tx_data_vio_async_out_i;
    wire    [31:0]  gt0_tx_data_vio_sync_out_i;
    wire    [31:0]  gt0_rx_data_vio_async_in_i;
    wire    [31:0]  gt0_rx_data_vio_sync_in_i;
    wire    [31:0]  gt0_rx_data_vio_async_out_i;
    wire    [31:0]  gt0_rx_data_vio_sync_out_i;
    wire    [163:0] gt0_ila_in_i;
    wire    [31:0]  gt0_channel_drp_vio_async_in_i;
    wire    [31:0]  gt0_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt0_channel_drp_vio_async_out_i;
    wire    [31:0]  gt0_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt0_common_drp_vio_async_in_i;
    wire    [31:0]  gt0_common_drp_vio_sync_in_i;
    wire    [31:0]  gt0_common_drp_vio_async_out_i;
    wire    [31:0]  gt0_common_drp_vio_sync_out_i;


wire            gttxreset_i;
wire            gtrxreset_i;

wire            user_tx_reset_i;
wire            user_rx_reset_i;
wire            tx_vio_clk_i;
wire            tx_vio_clk_mux_out_i;    
wire            rx_vio_ila_clk_i;
wire            rx_vio_ila_clk_mux_out_i;

wire            pll0reset_i;
wire            pll1reset_i;
wire            pll0pd_i;
wire            pll1pd_i;

  wire [(80 -32) -1:0] zero_vector_rx_80 ;
  wire [(8 -4) -1:0] zero_vector_rx_8 ;
  wire [79:0] gt0_rxdata_ila ;
  wire [1:0]  gt0_rxdatavalid_ila; 
  wire [7:0]  gt0_rxcharisk_ila ;
  wire gt0_txmmcm_lock_ila ;
  wire gt0_rxmmcm_lock_ila ;
  wire gt0_rxresetdone_ila ;
  wire gt0_txresetdone_ila ;


//**************************** Main Body of Code *******************************

    //  Static signal Assigments    
    assign tied_to_ground_i      = 1'b0;
    assign tied_to_ground_vec_i  = 64'h0000000000000000;
    assign tied_to_vcc_i         = 1'b1;
    assign tied_to_vcc_vec_i     = 8'hff;

    assign zero_vector_rx_80 = 0;
    assign zero_vector_rx_8 = 0;


    //***********************************************************************//
    //                                                                       //
    //--------------------------- The GTP INSTANCE --------------------------//
    //                                                                       //
    //***********************************************************************//
    
    // Use the instantiation template in the example directory to add the GT wrapper to your design.
    // In this example, the wrapper is wired up for basic operation with a frame generator and frame 
    // checker. The GTs will reset, then attempt to align and transmit data. If channel bonding is 
    // enabled, bonding should occur after alignment.
    // While connecting the GT TX/RX Reset ports below, please add a delay of
    // minimum 500ns as mentioned in AR 43482.
	//
	//
	//


    gtwizard_0 gtwizard_0_support_i 
    (
        .soft_reset_tx_in               (soft_reset_tx_i),
        .dont_reset_on_data_error_in    (tied_to_vcc_i),
    .q0_clk0_gtrefclk_pad_n_in(Q0_CLK1_GTREFCLK_PAD_N_IN),
    .q0_clk0_gtrefclk_pad_p_in(Q0_CLK1_GTREFCLK_PAD_P_IN),
        .gt0_tx_mmcm_lock_out           (gt0_txmmcm_lock_i),
        .gt0_tx_fsm_reset_done_out      (gt0_txfsmresetdone_i),
        .gt0_rx_fsm_reset_done_out      (gt0_rxfsmresetdone_i),
        .gt0_data_valid_in              (tied_to_vcc_i),
 
    .gt0_txusrclk_out(gt0_txusrclk_i),
    .gt0_txusrclk2_out(gt0_txusrclk2_i),



        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT0  (X0Y3)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt0_drpaddr_in                 (gt0_drpaddr_i),
        .gt0_drpdi_in                   (gt0_drpdi_i),
        .gt0_drpdo_out                  (gt0_drpdo_i),
        .gt0_drpen_in                   (gt0_drpen_i),
        .gt0_drprdy_out                 (gt0_drprdy_i),
        .gt0_drpwe_in                   (gt0_drpwe_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt0_eyescanreset_in            (tied_to_ground_i),
        //.gt0_rxuserrdy_in               (tied_to_vcc_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt0_eyescandataerror_out       (gt0_eyescandataerror_i),
        .gt0_eyescantrigger_in          (tied_to_ground_i),   
        .gt0_dmonitorout_out            (gt0_dmonitorout_i),

        //------------------- TX Initialization and Reset Ports --------------------
        .gt0_gttxreset_in               (soft_reset_tx_i),        
        .gt0_txuserrdy_in               (tied_to_vcc_i),
        //---------------- Transmit Ports - FPGA TX Interface Ports ----------------
        .gt0_txdata_in                  (gt0_txdata_i),
        //---------------- Transmit Ports - TX 8B/10B Encoder Ports ----------------
        .gt0_txcharisk_in               (tx_k_w),
        //------------- Transmit Ports - TX Configurable Driver Ports --------------
        .gt0_gtptxn_out                 (TXN_OUT),
        .gt0_gtptxp_out                 (TXP_OUT),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt0_txoutclkfabric_out         (gt0_txoutclkfabric_i),
        .gt0_txoutclkpcs_out            (gt0_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt0_txresetdone_out            (gt0_txresetdone_i),


    //____________________________COMMON PORTS________________________________
 
   .sysclk_in(clk40_w)

    );

    //***********************************************************************//
    //                                                                       //
    //--------------------------- User Module Resets-------------------------//
    //                                                                       //
    //***********************************************************************//
    // All the User Modules i.e. FRAME_GEN, FRAME_CHECK and the sync modules
    // are held in reset till the RESETDONE goes high. 
    // The RESETDONE is registered a couple of times on *USRCLK2 and connected 
    // to the reset of the modules
always @(posedge  gt0_rxusrclk2_i or negedge gt0_rxresetdone_i)
    begin
        if (!gt0_rxresetdone_i)
        begin
            gt0_rxresetdone_r    <=   `DLY 1'b0;
            gt0_rxresetdone_r2   <=   `DLY 1'b0;
            gt0_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt0_rxresetdone_r    <=   `DLY gt0_rxresetdone_i;
            gt0_rxresetdone_r2   <=   `DLY gt0_rxresetdone_r;
            gt0_rxresetdone_r3   <=   `DLY gt0_rxresetdone_r2;
        end
    end


always @(posedge gt0_txusrclk2_i or negedge gt0_txfsmresetdone_i)
begin
        if (!gt0_txfsmresetdone_i)
        begin
            gt0_txfsmresetdone_r    <=   `DLY 1'b0;
            gt0_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt0_txfsmresetdone_r    <=   `DLY gt0_txfsmresetdone_i;
            gt0_txfsmresetdone_r2   <=   `DLY gt0_txfsmresetdone_r;
        end
        
            
end
    
wire [3:0] tx_k_w;
wire k_w;
wire fifo_we_w;
wire fifo_re_w;
wire fifo_empty;
wire [33:0] fifo_din_w;
wire [33:0] fifo_dout_w;

//################# Instance of Module for n_words (32 bits per word) and n_packs ##################//
// link_ready (commented) : signal for init the full mode stream controller (see the module) .
// we (commented): signal for start the prbs and send the n_packs
// tx_data: signal of 32 bits from full mode Logic to GTP
// tx_k: signal of k_character identification.
//
//     THIS MODULE WAS GENERATED BY MIGEN CODE.

top_logic_n_packs top_logic_n_packs(
	//.link_ready    (SW6),     				// Is commented because in the test we used a pulse signal     			
	.we            (SW6),						// pulse signal for link_ready and we 
	//.led0          (led0),
	//.led2          (led2),
	//.led3          (led3),
	.reset         (gt0_tx_system_reset_c),		
	.tx_clk        (gt0_txusrclk2_i),
	.txinit_done   (~gt0_tx_system_reset_c),
	.tx_data       (gt0_txdata_i),
	.tx_k          (k_w)
	
);


    assign gt0_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt0_matchn_i;
    assign gt0_inc_in_i = 1'b0;

  
wire tx_32bdone_w;
wire fifoEmpty_w;
wire aligned_w;
wire [31:0] fifo_dout_w;
wire fifo_full_w;

wire [7:0] Din_w;
wire [7:0] Dout_w;
wire ack_in_w;
wire ack_out_w;
wire clk40_w;
wire clk_w;
wire cmd_ack_w;
wire ena_w;
wire nReset_w;
wire read_w;
wire start_w;
wire stop_w;
wire write_w;


// ####################  Instance of jitter atenuator ###############
// Jitter attenuated clock (back side of board) Silicon Labs SI5324-C-GM
//	The AC701 board includes a Silicon Labs Si5324 jitter attenuator U24 on the back side of the board.
//  FPGA user logic can implement a clock recovery circuit and then output this clock to a differential
//  I/O pair on I/O bank 16 (REC_CLOCK_C_P, FPGA U1 pin D23 and REC_CLOCK_C_N, FPGA
//  U1 pin D24) for jitter attenuation
//
//  THIS INSTANCE IS BASED ON THE VHDL CODE PROVIDE BY CERN TEAM.
//
si5324_init si5324_init(
    .Din      (Din_w),
    .Dout     (Dout_w),
    .LOL_READ (),
    .LOS_READ (),
    .RST      (RESET | !locked_240_w),
    .ack_in   (ack_in_w),
    .ack_out  (ack_out_w),
    .clk      (clk_w),
    .clk40    (clk40_w),
    .cmd_ack  (cmd_ack_w),
    .ena      (ena_w),
    .nReset   (nReset_w),
    .read     (read_w),
    .start    (start_w),
    .stop     (stop_w),
    .write    (write_w)
);

// ######## I2C module for si5324 ######
//THIS INSTANCE IS BASED ON THE VHDL CODE PROVIDE BY CERN TEAM.
//
simple_i2c simple_i2c (
	    .clk       (clk_w),
		.ena       (ena_w),
		.nReset    (nReset_w),
		.clk_cnt   (8'b11111111), 
		.start     (start_w),
		.stop      (stop_w),
		.read       (read_w),
		.write      (write_w),
		.ack_in     (ack_in_w),
		.Din        (Din_w),
		.cmd_ack    (cmd_ack_w),
		.ack_out    (ack_out_w),
		.Dout       (Dout_w),
		//i2c signals
		.SCL         (SCL),
		.SDA         (SDA)
);

// ##### Internal Clocks module for the system ##########
// The clk wizard is used for:
//							  Generated the 240 Mhz clk for GTP.
//							  Generated the 40 Mhz clk for GTP DRP. 
//							  Generated the 300 Mhz clk for asynchronus fifo write eneable.
wire clk_240_w;
wire clk300_w;
wire locked_240_w;
clk_wiz_1 clk_wiz_1 (
  // Clock out ports
  .clk_240      (clk_240_w),
  .clk_40       (clk40_w),
  .clk_300      (clk300_w),
  // Status and control signals
  .reset        (RESET),
  .locked       (locked_240_w),
 // Clock in ports
  .clk_in1_p   (USER_CLK_P),
  .clk_in1_n   (USER_CLK_N)
  
);
// ####### The FIFO is commented for the test //////

/*
fifo_fm fifo_fm(
    .rst        (gt0_tx_system_reset_c),
    .wr_clk     (clk300_w),
    .rd_clk     (gt0_txusrclk2_i),
    .din        (fifo_din_w),
    .wr_en      (fifo_we_w),
    .rd_en      (fifo_re_w),
    .dout       (fifo_dout_w),
    .full       (),
    .empty      (fifo_empty_w),
    .wr_rst_busy (),
    .rd_rst_busy  ()
);
*/

// ### Output buffer for the ref clk for gtp
// clk_si5324_240_out_p is connected to Q0_CLK1_GTREFCLK_PAD_P_IN in the constraints  
// clk_si5324_240_out_n is connected to Q0_CLK1_GTREFCLK_PAD_N_IN in the constraints  
//
OBUFDS OBUFDS(
   .I       (clk_240_w),
   .O       (clk_si5324_240_out_p),
   .OB      (clk_si5324_240_out_n)
);


    assign TRACK_DATA_OUT = track_data_out_i;
    assign track_data_out_i =  gt0_track_data_i ;







//-------------------------------------------------------------------------------------

//------------ optional Ports assignments --------------
//------------------------------------------------------

    // assign resets for frame_gen modules
    assign  gt0_tx_system_reset_c = !gt0_txfsmresetdone_r2;

    // assign resets for frame_check modules
    assign  gt0_rx_system_reset_c = !gt0_rxresetdone_r3;

//-------------------------------------------------------------

assign gt0_rxlpmreset_i = 1'b0;
assign gt0_drpaddr_i = 9'd0;
assign gt0_drpdi_i = 16'd0;
assign gt0_drpen_i = 1'b0;
assign gt0_drpwe_i = 1'b0;
assign soft_reset_tx_i = RESET  | !locked_240_w;
assign si5324_resetn = !( RESET  | !locked_240_w);
assign i2cmux_rst = !( RESET  | !locked_240_w);
assign pcie_mgt_clk_sel0 = 1'b1;
assign pcie_mgt_clk_sel1 = 1'b0;
assign led0 = gt0_txfsmresetdone_r2;
assign led1 = SW6;
assign tx_k_w={1'b0,1'b0,1'b0,k_w};

endmodule
    
